name: Build and test

on:
  push:
    branches:  [main]
    paths:
      - '**.yml'
      - '**.csv'
      - '**.py'
      - '**.ipynb'
  pull_request:
    branches:  [main]
    paths:
      - '**.yml'
      - '**.csv'
      - '**.py'
      - '**.ipynb'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:  [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12", "3.13"]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Miniconda using Python ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          activate-environment: usempl-plots-dev
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
      - name: Build
        shell: bash -l {0}
        run: |
          pip install -e .
      - name: Conda info and list
        shell: bash -el {0}
        run: |
          conda info
          conda list
      - name: Test
        shell: bash -l {0}
        working-directory: ./
        run: |
          python -m pytest -m 'not local' --cov=./ --cov-report=xml --maxfail=0
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && contains(github.repository, 'OpenSourceEcon/usempl-plots')
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
